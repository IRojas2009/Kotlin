package `24_POO_Colaboraciones_clases`

import `16_Funciones_parametro_por_defecto`.tituloSubrayado

/*
Problema 1
Objetivo:
Simular el pr√©stamo y devoluci√≥n de libros en una biblioteca usando dos clases que colaboran entre s√≠.
üîπ Clase Libro
Atributos:
titulo: String ‚Üí nombre del libro.
prestado: Boolean ‚Üí indica si el libro est√° prestado (true) o disponible (false).



M√©todos:
prestar()
Si el libro no est√° prestado, lo marca como prestado.
Si ya est√° prestado, imprime un mensaje indicando que no se puede prestar.


devolver()
Si el libro est√° prestado, lo marca como disponible.
Si ya estaba disponible, imprime que no es necesario devolverlo.


estado()
Imprime el t√≠tulo del libro y si est√° "prestado" o "disponible".


üîπ Clase Biblioteca
Atributos:
libro1, libro2, libro3: Instancias de la clase Libro.
M√©todos:
operar()
Realiza operaciones sobre los libros: presta algunos, devuelve otros.
revisarEstado()
Llama al m√©to do estado() de cada libro para mostrar su situaci√≥n.


üîπ L√≥gica de colaboraci√≥n:
La clase Biblioteca no gestiona directamente los estados, sino que invoca m√©todos de sus objetos Libro para realizar las operaciones. Esta es una relaci√≥n de colaboraci√≥n directa entre objetos.

 */

class Libro(var titulo: String) {
    var prestado: Boolean = false

    fun prestar() {
        if (!prestado) {
            prestado = true
            println("El libro \"$titulo\" ha sido prestado.")
        } else {
            println("El libro \"$titulo\" ya est√° prestado y no se puede prestar.")
        }
    }

    fun devolver() {
        if (prestado) {
            prestado = false
            println("El libro \"$titulo\" ha sido devuelto.")
        } else {
            println("El libro \"$titulo\" ya est√° disponible. No es necesario devolverlo.")
        }
    }

    fun estado() {
        val estado = if (prestado) "prestado" else "disponible"
        println("El libro \"$titulo\" est√° $estado.")
    }
}


class Biblioteca {
    var libro1 = Libro("Cien a√±os de soledad")
    var libro2 = Libro("Don Quijote de la Mancha")
    var libro3 = Libro("La sombra del viento")

    fun operar() {
        libro1.prestar()
        libro2.prestar()
        libro2.devolver()
        libro3.devolver()
    }

    fun revisarEstado() {
        libro1.estado()
        libro2.estado()
        libro3.estado()
    }
}

fun main() {
    val biblioteca = Biblioteca()
    biblioteca.operar()
    println("Estado de los libros:")
    biblioteca.revisarEstado()
}
